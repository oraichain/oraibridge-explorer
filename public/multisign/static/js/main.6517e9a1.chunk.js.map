{"version":3,"sources":["components/Header.jsx","components/Approvers.jsx","lib/detectMobile.js","lib/wasm.js","components/Votes.jsx","components/Transfers.jsx","components/CreateTransfer.jsx","components/MultiSign.jsx","components/Body.jsx","components/App.jsx","index.js"],"names":["Header","className","style","color","role","aria-label","Approvers","approvers","quorum","map","approver","index","key","addr","weight","src","name","displayObjectSize","displayDataTypes","displayArrayKey","getMobileOperatingSystem","userAgent","navigator","vendor","console","log","test","window","MSStream","RegExp","join","message","Cosmos","wasm","baseUrl","chainId","requestGetChildKey","data","JSON","stringify","type","ReactNativeWebView","postMessage","this","cosmos","replace","setBech32MainPrefix","address","input","a","param","Buffer","from","toString","get","gas","fees","funds","memo","mode","getChildKey","pathOrChildKey","childKey","sender","getAddress","txBody","getHandleMessage","submit","path","noCache","Wallet","Wasm","getChildKeyFromMobile","childKeyValue","privateKey","chainCode","network","fromPrivateKey","Promise","resolve","reject","listener","document","addEventListener","res","parse","payload","value","formatChildKeyFromMobile","childKeyMobile","marketplace","process","REACT_APP_MARKET_PLACE_CONTRACT","ow721","REACT_APP_NFT_TOKEN_CONTRACT","lock","REACT_APP_LOCK_CONTRACT_ADDR","auction","REACT_APP_AUCTION_CONTRACT","statusCode","SUCCESS","NOT_FOUND","GENERIC_ERROR","hash","sha256","digest","signature","signRaw","publicKey","contract","msg","sent_funds","denom","bech32MainPrefix","amount","msgSend","cosmwasm","v1beta1","MsgExecuteContract","msgSendAny","google","protobuf","Any","type_url","encode","finish","tx","TxBody","messages","toAddress","bank","MsgSend","from_address","to_address","wallet","Keystation","keystationUrl","lcd","Votes","id","useState","loading","setLoading","votes","setVotes","useEffect","query","list_votes","proposal_id","votersData","init","collapsed","TransferAction","status","handler","onClick","Transfers","transfers","nextTransfers","approveTransfer","msgs","send","to","BigNumber","dividedBy","toFormat","toUpperCase","CreateTransfer","createTransfer","transfer","setTransfer","debouncedUpdate","debounce","obj","trailing","handleChange","e","persist","target","onSubmit","event","preventDefault","placeholder","onChange","Multisig","display","alignItems","fontWeight","lineHeight","fontSize","marginLeft","Body","App","setTransfers","setApprovers","setQuorum","reload","setReload","list_members","membersData","members","threshold","reverse_proposals","limit","proposalsData","proposals","start_before","slice","title","description","execute","propose","multipliedBy","alert","vote","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6517e9a1.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header() {\n  return (\n    <nav className=\"navbar mt-3\">\n      <p\n        className=\"navbar-brand font-weight-bold mb-0\"\n        style={{ color: '#325fea' }}\n      >\n        <span role=\"img\" aria-label=\"dollar-bag\">\n          💰\n        </span>{' '}\n        Oraichain MultiSig Wallet\n      </p>\n      <hr className=\"border-primary border w-100 border-4\" />\n    </nav>\n  );\n}\n","import React from 'react';\nimport ReactJson from 'react-json-view';\n\nexport default function Approvers({ approvers, quorum }) {\n  return (\n    <div className=\"w-100\">\n      <h5 className=\"mt-3\">Approvers Address</h5>\n      <table className=\"my-3 table table-sm\">\n        <thead>\n          <tr>\n            <th>Address</th>\n            <th>Weight</th>\n          </tr>\n        </thead>\n        <tbody>\n          {approvers.map((approver, index) => {\n            return (\n              <tr key={index}>\n                <td> {approver.addr}</td>\n                <td>{approver.weight}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className=\"mt-3 font-italic\">\n        Quorum:{' '}\n        <span className=\"font-weight-bold\">\n          <ReactJson\n            src={quorum}\n            name={false}\n            displayObjectSize={false}\n            displayDataTypes={false}\n            displayArrayKey={false}\n          />\n        </span>\n      </div>\n    </div>\n  );\n}\n","export function getMobileOperatingSystem() {\n  const userAgent = navigator.userAgent || navigator.vendor;\n\n  console.log(userAgent);\n\n  // Windows Phone must come first because its UA also contains \"Android\"\n  if (/windows phone/i.test(userAgent)) {\n    return 'Windows Phone';\n  }\n\n  if (/android/i.test(userAgent)) {\n    return 'Android';\n  }\n\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\n    return 'iOS';\n  }\n\n  return 'unknown';\n}\n\nexport const isMobile =\n  getMobileOperatingSystem() === 'iOS' ||\n  getMobileOperatingSystem() === 'Android';\n\nconst rules = [\n  // if it says it's a webview, let's go with that\n  'WebView',\n  // iOS webview will be the same as safari but missing \"Safari\"\n  '(iPhone|iPod|iPad)(?!.*Safari)',\n  // Android Lollipop and Above: webview will be the same as native but it will contain \"wv\"\n  // Android KitKat to lollipop webview will put {version}.0.0.0\n  'Android.*(wv|.0.0.0)',\n  // old chrome android webview agent\n  'Linux; U; Android'\n];\n\nconst webviewRegExp = new RegExp('(' + rules.join('|') + ')', 'ig');\n\nexport const isWebview = () => {\n  const userAgent = navigator.userAgent || navigator.vendor;\n\n  return !!userAgent.match(webviewRegExp);\n};\n","import Cosmos from '@oraichain/cosmosjs/dist/index.web';\nimport { fromPrivateKey } from 'bip32';\nimport { Buffer } from 'buffer';\nimport { sha256 } from 'js-sha256';\nimport { getMobileOperatingSystem } from './detectMobile';\n\n\n/** basically query and execute, with param : contract, lcd, and simulate is true or false\n */\nconst message = Cosmos.message;\n\n/**\n * If there is chainId it will interacte with blockchain, otherwise using simulator\n */\nclass Wasm {\n  constructor(baseUrl, chainId = 'Simulate') {\n    this.cosmos = new Cosmos(baseUrl.replace(/\\/$/, ''), chainId);\n    this.cosmos.setBech32MainPrefix('orai');\n\n  }\n\n  /**\n   * query with json string\n   * */\n  async query(address, input) {\n    const param = Buffer.from(JSON.stringify(input)).toString('base64');\n    return this.cosmos.get(`/wasm/v1beta1/contract/${address}/smart/${param}`);\n  }\n\n  /**\n   * execute smart contract require childKey when interacting with blockchain\n   * @param {*} address   : the wallet address\n   * @param {*} input     : the string from JSON.stringify\n   * @param {*} pathOrChildKey   : can be account on simulate or hd path | childKey on blockchain\n   * @param {*} options   : custom options {gas, fees, funds: for swap native token}\n   * @returns Promise<any>\n   */\n\n  async execute(\n    address,\n    input,\n    { gas, fees, funds, memo, mode = 'BROADCAST_MODE_SYNC' } = {}\n  ) {\n    const param = Buffer.from(JSON.stringify(input));\n    const pathOrChildKey = await this.getChildKey();\n    if (this.cosmos.chainId === 'Simulate') {\n      return this.cosmos.get(\n        `/wasm/contract/${address}/handle/${param.toString(\n          'base64'\n        )}?account=${pathOrChildKey}`\n      );\n    }\n\n    const childKey =\n      typeof pathOrChildKey === 'string'\n        ? await this.getChildKey(pathOrChildKey)\n        : pathOrChildKey;\n    if (!childKey) {\n      return;\n    }\n    const sender = this.cosmos.getAddress(childKey);\n    const txBody = this.getHandleMessage(address, param, sender, funds, memo);\n\n    return this.cosmos.submit(\n      childKey,\n      txBody,\n      mode,\n      fees ? fees : 0,\n      gas ? gas : 200000\n    );\n  }\n\n  async getChildKey(path, noCache) {\n    if (window.Wallet) {\n      let childKeyValue;\n      // @ts-ignore\n      if (window?.ReactNativeWebView?.postMessage) {\n        childKeyValue = await window.Wasm.getChildKeyFromMobile();\n      } else {\n        childKeyValue = await window.Wallet.getChildKey(path);\n      }\n\n      // @ts-ignore\n      const { privateKey, chainCode, network } = childKeyValue || {};\n\n      const childKey = fromPrivateKey(\n        Buffer.from(privateKey),\n        Buffer.from(chainCode),\n        network\n      );\n\n      return childKey;\n    }\n  }\n\n  getChildKeyFromMobile() {\n    return new Promise((resolve, reject) => {\n      let listener = document;\n      const isIOS = getMobileOperatingSystem() === 'iOS';\n      if (isIOS) {\n        // @ts-ignore\n        listener = window;\n      }\n      listener.addEventListener('message', (res) => {\n        // @ts-ignore\n        const data = JSON.parse(res?.data);\n        const { payload, type } = data || {};\n        if (type === 'cancel') {\n          resolve(null);\n          return;\n        }\n        if (type === 'childKey' && payload) {\n          const value = JSON.parse(payload);\n          const childKey = window.Wasm.formatChildKeyFromMobile(value);\n          resolve(childKey);\n        }\n      });\n      window.Wasm.requestGetChildKey();\n    });\n  }\n\n  requestGetChildKey = () => {\n    const postMessageProxy = function (data) {\n      // @ts-ignore\n      window.ReactNativeWebView.postMessage(data);\n    };\n    postMessageProxy(JSON.stringify({ type: 'Login' }));\n  };\n\n  formatChildKeyFromMobile(childKeyMobile) {\n    const { privateKey, chainCode, network } = childKeyMobile;\n    const childKey = fromPrivateKey(\n      Buffer.from(privateKey.data),\n      Buffer.from(chainCode.data),\n      network\n    );\n    return childKey;\n  }\n\n  /**\n   * get the public wallet address given a child key\n   * @returns string\n   */\n  getAddress(childKey) {\n    return this.cosmos.getAddress(childKey);\n  }\n\n  /**\n   * get an object containing marketplace and ow721 contract addresses\n   * @returns ContractAddress\n   */\n  get contractAddresses() {\n    return {\n      marketplace: process.env.REACT_APP_MARKET_PLACE_CONTRACT,\n      ow721: process.env.REACT_APP_NFT_TOKEN_CONTRACT,\n      lock: process.env.REACT_APP_LOCK_CONTRACT_ADDR,\n      auction: process.env.REACT_APP_AUCTION_CONTRACT\n    };\n  }\n\n  get statusCode() {\n    const { statusCode } = this.cosmos;\n    console.log('status code: ', statusCode);\n    return {\n      SUCCESS: statusCode.SUCCESS,\n      NOT_FOUND: statusCode.NOT_FOUND,\n      GENERIC_ERROR: statusCode.GENERIC_ERROR\n    };\n  }\n\n  async getSignedData(data) {\n    const pathOrChildKey = await this.getChildKey();\n    const childKey =\n      typeof pathOrChildKey === 'string'\n        ? await this.getChildKey(pathOrChildKey)\n        : pathOrChildKey;\n    if (!childKey) {\n      return;\n    }\n    const hash = Buffer.from(sha256.digest(data));\n    const signature = Buffer.from(\n      this.cosmos.signRaw(hash, childKey.privateKey)\n    );\n    return {\n      signature: signature.toString('base64'),\n      publicKey: childKey.publicKey.toString('base64')\n    };\n  }\n\n  getHandleMessage(contract, msg, sender, funds, memo) {\n    const sent_funds = funds\n      ? [{ denom: this.cosmos.bech32MainPrefix, amount: funds }]\n      : null;\n\n    const msgSend = new message.cosmwasm.wasm.v1beta1.MsgExecuteContract({\n      contract,\n      msg,\n      sender,\n      sent_funds\n    });\n\n    const msgSendAny = new message.google.protobuf.Any({\n      type_url: '/cosmwasm.wasm.v1beta1.MsgExecuteContract',\n      value:\n        message.cosmwasm.wasm.v1beta1.MsgExecuteContract.encode(\n          msgSend\n        ).finish()\n    });\n\n    return new message.cosmos.tx.v1beta1.TxBody({\n      messages: [msgSendAny],\n      memo\n    });\n  }\n\n  getSendMessage(sender, memo, toAddress, amount) {\n    const msgSend = new message.cosmos.bank.v1beta1.MsgSend({\n      from_address: sender,\n      to_address: toAddress,\n      amount: [\n        { denom: this.cosmos.bech32MainPrefix, amount: amount.toString() }\n      ]\n    });\n\n    const msgSendAny = new message.google.protobuf.Any({\n      type_url: '/cosmos.bank.v1beta1.MsgSend',\n      value: message.cosmos.bank.v1beta1.MsgSend.encode(msgSend).finish()\n    });\n\n    return new message.cosmos.tx.v1beta1.TxBody({\n      messages: [msgSendAny],\n      memo\n    });\n  }\n\n  encodeTxBody(txBody) {\n    return message.cosmos.tx.v1beta1.TxBody.encode(txBody).finish();\n  }\n}\n\n// export default Wasm;\nconst wasm = new Wasm(\n  process.env.REACT_APP_LCD ?? 'https://lcd.orai.io',\n  process.env.REACT_APP_NETWORK\n);\n\nconst wallet = new window.Keystation({\n  keystationUrl: process.env.REACT_APP_WALLET_URL,\n  lcd: process.env.REACT_APP_LCD\n});\n\nwindow.Wallet = wallet;\nwindow.Wasm = wasm;\n\nexport { wallet, wasm };\n","import React, { useState, useEffect } from 'react';\nimport ReactJson from 'react-json-view';\nimport { wasm } from '../lib/wasm';\n\nexport default function Votes({ id }) {\n  const [loading, setLoading] = useState(true);\n  const [votes, setVotes] = useState([]);\n  useEffect(() => {\n    const init = async () => {\n      const { data: votersData } = await wasm.query(\n        process.env.REACT_APP_MULTISIG_ADDRESS,\n        {\n          list_votes: {\n            proposal_id: id\n          }\n        }\n      );\n\n      setVotes(votersData?.votes);\n      setLoading(false);\n    };\n    init();\n  }, [id]);\n\n  if (loading === true) {\n    return <div className=\"container text-center\">Loading...</div>;\n  }\n\n  return (\n    <ReactJson\n      src={votes}\n      name={false}\n      collapsed\n      displayObjectSize={false}\n      displayDataTypes={false}\n      displayArrayKey={false}\n    />\n  );\n}\n","import React from \"react\";\nimport Votes from \"./Votes\";\nimport BigNumber from \"bignumber.js\";\n\n// \t   Pending = 1,\n//     /// you can vote on this\n//     Open = 2,\n//     /// voting is over and it did not pass\n//     Rejected = 3,\n//     /// voting is over and it did pass, but has not yet executed\n//     Passed = 4,\n//     /// voting is over it passed, and the proposal was executed\n//     Executed = 5,\nconst TransferAction = ({ status, id, handler }) => {\n  switch (status) {\n    case \"open\":\n      return (\n        <button\n          className=\"btn btn-info\"\n          onClick={() => handler?.({ type: \"vote\", id })}\n        >\n          Vote\n        </button>\n      );\n    case \"passed\":\n      return (\n        <button\n          className=\"btn btn-warning\"\n          onClick={() => handler?.({ type: \"execute\", id })}\n        >\n          Execute\n        </button>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default function Transfers({\n  transfers,\n  nextTransfers,\n  approveTransfer,\n}) {\n  return (\n    <div className=\"mt-3 w-100\">\n      <h5 className=\"text-center mt-3\">Transfers - Approvals</h5>\n      <table className=\"my-3 table table-sm\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Amount</th>\n            <th>To</th>\n            <th>Status</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transfers.map(({ id, msgs, status }) => {\n            const data = msgs[0]?.bank.send;\n            if (!data) return;\n\n            const { to_address: to } = data;\n            const { amount, denom } = data.amount[0];\n            return (\n              <tr key={id}>\n                <td>{id}</td>\n                <td>\n                  {BigNumber(amount).dividedBy(1000000).toFormat()}{\" \"}\n                  <small className=\"font-weight-bold\">\n                    {denom.toUpperCase()}\n                  </small>\n                </td>\n                <td>\n                  {to}\n                  <div className=\"font-italic\">\n                    Votes:{\" \"}\n                    <span className=\"font-weight-bold\">\n                      <Votes id={id} />\n                    </span>\n                  </div>\n                </td>\n                <td>\n                  <span className=\"text-capitalize\">{status}</span>\n                </td>\n                <td>\n                  <TransferAction\n                    id={id}\n                    status={status}\n                    handler={approveTransfer}\n                  />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <nav>\n        <ul className=\"pagination\">\n          <li className=\"page-item\">\n            <button className=\"btn btn-link\" onClick={nextTransfers}>\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport debounce from \"lodash/debounce\";\n\nexport default function CreateTransfer({ createTransfer }) {\n  const [transfer, setTransfer] = useState();\n\n  const debouncedUpdate = debounce(\n    (obj) => setTransfer({ ...transfer, ...obj }),\n    500,\n    {\n      trailing: true,\n    },\n  );\n\n  const handleChange = (e) => {\n    e.persist();\n    debouncedUpdate({ [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createTransfer(transfer);\n  };\n\n  return (\n    <div className=\"mt-3\">\n      <h5>Create Transfer</h5>\n      <form className=\"mt-4 flex-form\" onSubmit={handleSubmit}>\n        <div className=\"input-group mb-2\">\n          <div className=\"input-group-prepend\">\n            <div className=\"input-group-text\">Title</div>\n          </div>\n          <input\n            name=\"title\"\n            className=\"form-group form-control mb-0\"\n            type=\"text\"\n            placeholder=\"Proposal title\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"input-group mb-2\">\n          <div className=\"input-group-prepend\">\n            <div className=\"input-group-text\">Description</div>\n          </div>\n          <textarea\n            name=\"description\"\n            className=\"form-group form-control mb-0 fullwidth\"\n            type=\"text\"\n            placeholder=\"Proposal description\"\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <div className=\"input-group mb-2\">\n          <div className=\"input-group-prepend\">\n            <div className=\"input-group-text\">Orai</div>\n          </div>\n          <input\n            name=\"amount\"\n            className=\"form-group form-control mb-0\"\n            type=\"number\"\n            placeholder=\"eg: 1.5\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"input-group mb-2\">\n          <div className=\"input-group-prepend\">\n            <div className=\"input-group-text\">To</div>\n          </div>\n          <input\n            name=\"to\"\n            className=\"form-group form-control mb-0 w-75\"\n            type=\"text\"\n            placeholder=\"orai123xxx...\"\n            onChange={handleChange}\n          />\n        </div>\n\n        <button className=\"btn btn-info mt-1 float-right\">\n          Submit Transfer\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Multisig({ approvers, quorum }) {\n  return (\n    <div className=\"w-100\">\n      <div style={{ display: \"flex\", alignItems: \"center\" }} className=\"mt-3\">\n        <div style={{ fontWeight: 500, lineHeight: 1.2, fontSize: \"1.25rem\" }}>\n          MultiSig Address:{\" \"}\n        </div>\n        <div style={{ marginLeft: 4 }}>\n          {process.env.REACT_APP_MULTISIG_ADDRESS}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Approvers from \"./Approvers\";\nimport Transfers from \"./Transfers\";\nimport CreateTransfer from \"./CreateTransfer\";\nimport Multisig from \"./MultiSign\";\n\nexport default function Body({\n  approvers,\n  quorum,\n  transfers,\n  createTransfer,\n  nextTransfers,\n  approveTransfer,\n}) {\n  return (\n    <div className=\"mx-3 my-5\">\n      <div className=\"row\">\n        <div className=\"col-lg-5 \">\n          <Multisig />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-5 \">\n          <Approvers approvers={approvers} quorum={quorum} />\n        </div>\n        <div className=\"col-lg-7\">\n          {/* <Multisig /> */}\n          <CreateTransfer createTransfer={createTransfer} />\n        </div>\n      </div>\n      <hr className=\"border-info border w-100 border-4\" />\n      <Transfers\n        transfers={transfers}\n        nextTransfers={nextTransfers}\n        approveTransfer={approveTransfer}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Body from \"./Body\";\nimport { wasm } from \"../lib/wasm\";\nimport BigNumber from \"bignumber.js\";\n\nexport default function App() {\n  const [transfers, setTransfers] = useState([]);\n  const [approvers, setApprovers] = useState([]);\n  const [quorum, setQuorum] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [reload, setReload] = useState(0);\n  const limit = 10;\n\n  useEffect(() => {\n    const init = async () => {\n      const { data: membersData } = await wasm.query(\n        process.env.REACT_APP_GROUP_ADDRESS,\n        {\n          list_members: {},\n        },\n      );\n      setApprovers(membersData?.members);\n\n      //AbsoluteCount, AbsolutePercentage, ThresholdQuorum\n      const { data: quorum } = await wasm.query(\n        process.env.REACT_APP_MULTISIG_ADDRESS,\n        { threshold: {} },\n      );\n      setQuorum(quorum);\n      setLoading(false);\n    };\n    init();\n  }, []);\n\n  // only update transfers, not quorum or members\n  useEffect(() => {\n    const init = async () => {\n      const { data: proposalsData } = await wasm.query(\n        process.env.REACT_APP_MULTISIG_ADDRESS,\n        {\n          reverse_proposals: {\n            limit,\n          },\n        },\n      );\n      // each proposal can see the voters details\n      setTransfers(proposalsData?.proposals);\n      setLoading(false);\n    };\n    init();\n  }, [reload]);\n\n  const nextTransfers = async () => {\n    const { data: proposalsData } = await wasm.query(\n      process.env.REACT_APP_MULTISIG_ADDRESS,\n      {\n        reverse_proposals: {\n          limit,\n          start_before: transfers.slice(-1)[0]?.id,\n        },\n      },\n    );\n    // each proposal can see the voters details\n    setTransfers([...transfers, ...proposalsData?.proposals]);\n  };\n\n  const createTransfer = async ({ title, description, to, amount }) => {\n    try {\n      setLoading(true);\n      await wasm.execute(\n        process.env.REACT_APP_MULTISIG_ADDRESS,\n        {\n          propose: {\n            title,\n            description,\n            msgs: [\n              {\n                bank: {\n                  send: {\n                    to_address: to,\n                    from_address: process.env.REACT_APP_MULTISIG_ADDRESS,\n                    amount: [\n                      {\n                        denom: \"orai\",\n                        amount: new BigNumber(amount)\n                          .multipliedBy(1000000)\n                          .toString(),\n                      },\n                    ],\n                  },\n                },\n              },\n            ],\n          },\n        },\n        { gas: 50000000 },\n      );\n      setReload(reload + 1);\n    } catch (ex) {\n      alert(ex.message);\n      setLoading(false);\n    }\n  };\n\n  const approveTransfer = async ({ id, type }) => {\n    try {\n      setLoading(true);\n      // excute approve transfer with message and waiting\n      switch (type) {\n        case \"execute\":\n          await wasm.execute(process.env.REACT_APP_MULTISIG_ADDRESS, {\n            execute: { proposal_id: id },\n          });\n          break;\n        case \"vote\":\n          await wasm.execute(\n            process.env.REACT_APP_MULTISIG_ADDRESS,\n            { vote: { proposal_id: id, vote: \"yes\" } },\n            { gas: 4000000 },\n          );\n          break;\n      }\n      // reload page\n      setReload(reload + 1);\n    } catch (ex) {\n      alert(ex.message);\n      setLoading(false);\n    }\n  };\n\n  if (loading === true) {\n    return <div className=\"container text-center\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"mx-5\">\n      <Header />\n      <Body\n        approvers={approvers}\n        quorum={quorum}\n        transfers={transfers}\n        approveTransfer={approveTransfer}\n        createTransfer={createTransfer}\n        nextTransfers={nextTransfers}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}